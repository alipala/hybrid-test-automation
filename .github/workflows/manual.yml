# This is the workflow that is manually triggered

name: Manual Run
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      choice:
        type: choice
        description: Select the environment
        required: true
        options:
          - acc
          - tst
          - bfx
      name:
        description: Put email(s)
        required: true
        default: '@gmail.com'

# Job lists of the workflow
# This job requires the OS to be run as follows
# It also starts to install JDK before tests
jobs:
  Test:
    runs-on: [ self-hosted, linux, x64 ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        id: jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true

# Setup maven because the test project is a maven project
      - name: Setup Maven
        id: maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: '3.8.4'

# Cache the maven packages to make the run fast
      - name: Cache the Maven packages
        id: cache_maven
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

# Install the latest Chrome driver
      - name: Setup Chromedriver
        id: chromedriver
        run: |
          cat /etc/os-release
          sudo apt-get -y update
          sudo apt-get -y install libnspr4 libnss3 libxcb1
          sudo apt-get install -y fastjar
          export CHROME_VERSION=$(curl --fail --retry 10 https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          curl https://chromedriver.storage.googleapis.com/$CHROME_VERSION/chromedriver_linux64.zip -o chromedriver.zip -s
          jar xvf chromedriver.zip
          sudo mv chromedriver $HOME/bin
          chmod 755 $HOME/bin
          chmod +x $HOME/bin
          export PATH=$PATH:/$HOME/bin/chromedriver

# Install the latest Chrome browser
      - name: Setup Chrome Browser
        id: chromebrowser
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb -f

# Run the tests with the environment that is decided by developer
      - name: Run Tests Maven
        env: # lookup key as an environment variable
          JIRA_URL: ${{ secrets.JIRA_URL }}
          JIRA_USER_NAME: ${{ secrets.JIRA_USER_NAME }}
          JIRA_PASSWORD: ${{ secrets.JIRA_PASSWORD }}
          AIS_LOGIN_USER: ${{ secrets.LOGIN_USER }}
          AIS_LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
        id: runtest
        run: mvn install -e -Dwebdriver.chrome.driver=$HOME/bin --file pom.xml -Denvironment=${{ github.event.inputs.choice }}

# After tests run, upload the Single Page Report to the artifactory
      - name: Single Page Report
        if: always()
        id: singlepagereport
        uses: actions/upload-artifact@v3
        with:
          name: single_page_report
          path: ${{ github.workspace }}/target/site/serenity/serenity-summary.html

  Report:
    if: always()
    needs: Test
    runs-on: [ self-hosted, linux, x64 ]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: single_page_report
        continue-on-error: true

      - name: Test artifact download
        run: ls -R
        continue-on-error: true

# If there is no problem send the mail to all stakeholders
      - name: Send Email With Report
        if: needs.Test.result == 'success'
        uses: dawidd6/action-send-mail@v3.6.0
        with:
          server_address: ${{ secrets.SERVER_ADDRESS }}
          server_port: ${{ secrets.SERVER_PORT }}
          subject: Automated Test Results - Manual Run
          to: ${{ github.event.inputs.name }}
          from: Team
          secure: false
          body: The tests run manually by ${{ github.event.inputs.name }} for ${{ github.event.inputs.choice }} environment. Please find the Test Report in attached file!
          reply_to: ${{ secrets.MAIL_REPLY_TO }}
          ignore_cert: true
          convert_markdown: true
          attachments: ./serenity-summary.html
          priority: normal

# If a problem happens send the mail to only developers
      - name: Send Email Without Report
        if: needs.Test.result == 'failure'
        uses: dawidd6/action-send-mail@v3.6.0
        with:
          server_address: ${{ secrets.SERVER_ADDRESS }}
          server_port: ${{ secrets.SERVER_PORT }}
          subject: Automated Test Results - Manual Run
          to: ${{ github.event.inputs.name }}
          from: Red Team
          secure: false
          body: No test run for ${{ github.event.inputs.choice }} because there is a problem runners in GitHub. Please check the logs and rerun the test in ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          reply_to: ${{ secrets.MAIL_REPLY_TO }}
          ignore_cert: true
          convert_markdown: true
          priority: high